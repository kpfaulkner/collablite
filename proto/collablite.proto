// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

option go_package = "./proto";
option java_multiple_files = true;
option java_package = "dev.collablite";
option java_outer_classname = "CollabLiteProto";

package collabproto;

// The CollabLite service definition.
service CollabLite {

  rpc ProcessObjectChanges(stream ObjectChange) returns (stream ObjectConfirmation) {}
  rpc ImportObject (ImportRequest) returns (StatusResponse) {}
  rpc GetObject (GetRequest) returns (GetResponse) {}
  rpc ListObjects (ListRequest) returns (ListResponse) {}

}

////////////////////////////
// Assumption is identifying user is done outside of the messages
////////////////////////////

// ObjectChange indicates a change requested by the client to the server.
message ObjectChange {
  string object_id = 1;
  string property_id = 2;
  bytes data = 3;
  string unique_id = 4; // unique id for this change. This will be used to make sure clients can check if THEY sent the change or not.
}

// ObjectConfirmation message from server to client indicating that the change in question is confirmed as good.
message ObjectConfirmation {
  string object_id = 1;
  string property_id = 2;
  bytes data = 3;
  string unique_id = 4; // unique id for this change.
}

// ImportRequest imports entire JSON(-ish) document into the database
message ImportRequest {
  string object_name = 1;
  bytes data = 2;
}

// GetRequest gets the entire object
message GetRequest {
  string object_id = 1;
}

message GetResponse {
  string object_id = 1;
  map<string, bytes> properties = 2;
}

// ListRequest lists all objects (for user).
message ListRequest {
  // unsure... what goes here?
}

// Response response to update requests
message StatusResponse {
  string message = 1;
  int32 code = 2;
}

// ListResponse is just id/name... maybe dates?
message ListResponse {
  string object_id = 1;
  string object_name = 2;
}
